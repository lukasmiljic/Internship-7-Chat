// <auto-generated />
using System;
using Chat.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chat.Data.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20231231182500_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chat.Data.Entities.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageID"));

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SenderMessageChannelID")
                        .HasColumnType("integer");

                    b.HasKey("MessageID");

                    b.HasIndex("SenderMessageChannelID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Chat.Data.Entities.Models.MessageChannel", b =>
                {
                    b.Property<int>("MessageChannelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageChannelID"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.HasKey("MessageChannelID");

                    b.ToTable("MessageChannels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MessageChannel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Chat.Data.Entities.Models.GroupChannel", b =>
                {
                    b.HasBaseType("Chat.Data.Entities.Models.MessageChannel");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("GroupChannel");
                });

            modelBuilder.Entity("Chat.Data.Entities.Models.UserChannel", b =>
                {
                    b.HasBaseType("Chat.Data.Entities.Models.MessageChannel");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("UserChannel");
                });

            modelBuilder.Entity("Chat.Data.Entities.Models.Message", b =>
                {
                    b.HasOne("Chat.Data.Entities.Models.MessageChannel", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderMessageChannelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Chat.Data.Entities.Models.MessageChannel", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
